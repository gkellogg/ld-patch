(
 (rule _empty "0" (seq))
 (rule ldpatch "1" (seq prologue _ldpatch_1))
 (rule _ldpatch_1 "1.1" (alt _empty _ldpatch_2))
 (rule _ldpatch_2 "1.2" (seq statement _ldpatch_1))
 (rule prologue "2" (alt _empty _prologue_1))
 (rule _prologue_1 "2.1" (seq prefixID prologue))
 (rule statement "3" (alt bind add addNew delete deleteExisting cut updateList))
 (rule bind "4" (seq _bind_1 VAR1 value _bind_2 "."))
 (rule prefixID "4t" (seq "@prefix" PNAME_NS IRIREF "."))
 (rule _bind_1 "4.1" (alt "Bind" "B"))
 (rule _bind_2 "4.2" (alt _empty path))
 (rule add "5" (seq _add_1 "{" graph "}" "."))
 (rule _add_1 "5.1" (alt "Add" "A"))
 (rule _triples_2 "6t.2" (seq blankNodePropertyList _triples_3))
 (rule _triples_3 "6t.3" (alt _empty predicateObjectList))
 (rule addNew "6" (seq _addNew_1 "{" graph "}" "."))
 (rule triples "6t" (alt _triples_1 _triples_2))
 (rule _triples_1 "6t.1" (seq subject predicateObjectList))
 (rule _addNew_1 "6.1" (alt "AddNew" "AN"))
 (rule _predicateObjectList_5 "7t.5" (seq verb objectList))
 (rule delete "7" (seq _delete_1 "{" graph "}" "."))
 (rule predicateObjectList "7t" (seq verb objectList _predicateObjectList_1))
 (rule _predicateObjectList_3 "7t.3"
  (seq _predicateObjectList_2 _predicateObjectList_1))
 (rule _predicateObjectList_4 "7t.4" (alt _empty _predicateObjectList_5))
 (rule _predicateObjectList_1 "7t.1" (alt _empty _predicateObjectList_3))
 (rule _predicateObjectList_2 "7t.2" (seq ";" _predicateObjectList_4))
 (rule _delete_1 "7.1" (alt "Delete" "D"))
 (rule _objectList_2 "8t.2" (seq "," object))
 (rule deleteExisting "8" (seq _deleteExisting_1 "{" graph "}" "."))
 (rule _objectList_3 "8t.3" (seq _objectList_2 _objectList_1))
 (rule _objectList_1 "8t.1" (alt _empty _objectList_3))
 (rule objectList "8t" (seq object _objectList_1))
 (rule _deleteExisting_1 "8.1" (alt "DeleteExisting" "DE"))
 (rule cut "9" (seq _cut_1 VAR1 "."))
 (rule verb "9t" (alt predicate "a"))
 (rule _cut_1 "9.1" (alt "Cut" "C"))
 (rule updateList "10" (seq _updateList_1 varOrIRI predicate slice collection "."))
 (rule subject "10t" (alt iri BlankNode collection VAR1))
 (rule _updateList_1 "10.1" (alt "UpdateList" "UL"))
 (rule predicate "11t" (seq iri))
 (rule varOrIRI "11" (alt iri VAR1))
 (rule value "12" (alt iri literal VAR1))
 (rule object "12t"
  (alt iri BlankNode collection blankNodePropertyList literal VAR1))
 (rule literal "13t" (alt RDFLiteral NumericLiteral BooleanLiteral))
 (rule path "13" (alt _empty _path_2))
 (rule _path_1 "13.1" (alt _path_3 constraint))
 (rule _path_2 "13.2" (seq _path_1 path))
 (rule _path_3 "13.3" (seq "/" step))
 (rule step "14" (alt _step_1 iri INDEX))
 (rule blankNodePropertyList "14t" (seq "[" predicateObjectList "]"))
 (rule _step_1 "14.1" (seq "^" iri))
 (rule _collection_2 "15t.2" (seq object _collection_1))
 (rule collection "15t" (seq "(" _collection_1 ")"))
 (rule _collection_1 "15t.1" (alt _empty _collection_2))
 (rule constraint "15" (alt _constraint_1 "!"))
 (rule _constraint_1 "15.1" (seq "[" path _constraint_2 "]"))
 (rule _constraint_2 "15.2" (alt _empty _constraint_3))
 (rule _constraint_3 "15.3" (seq "=" value))
 (rule slice "16" (seq _slice_1 ".." _slice_2))
 (rule NumericLiteral "16t" (alt INTEGER DECIMAL DOUBLE))
 (rule _slice_1 "16.1" (alt _empty INDEX))
 (rule _slice_2 "16.2" (alt _empty INDEX))
 (terminal INDEX "17" (seq (opt "-") (plus (range "0-9"))))
 (rule String "17"
  (alt STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_LONG_QUOTE ))
 (rule graph "18" (seq triples _graph_1))
 (terminal IRIREF "18"
  (seq "<"
   (range
    "^#x00-#x20<>\"{}|^`] | UCHAR)* '>' /*#x00=NULL #01-#x1F=control codes #x20=space */"
   )) )
 (rule _graph_1 "18.1" (alt _empty _graph_3))
 (rule _graph_2 "18.2" (seq "." _graph_4))
 (rule _graph_3 "18.3" (seq _graph_2 _graph_1))
 (rule _graph_4 "18.4" (alt _empty triples))
 (terminal INTEGER "19" (seq (opt (range "+-")) (plus (range "0-9"))))
 (terminal DECIMAL "20" (seq (opt (range "+-")) (star (range "0-9")) "." (plus (range "0-9"))))
 (terminal DOUBLE "21"
  (seq
   (opt (range "+-"))
   (alt
    (seq (plus (range "0-9")) "." (star (range "0-9")) EXPONENT)
    (seq "." (plus (range "0-9")) EXPONENT)
    (seq (plus (range "0-9")) EXPONENT)) ))
 (terminal STRING_LITERAL_QUOTE "22"
  (seq "\"" (star (alt (range "^#x22#x5C#xA#xD") ECHAR UCHAR)) "\""))
 (terminal STRING_LITERAL_SINGLE_QUOTE "23"
  (seq "'" (star (alt (range "^#x27#x5C#xA#xD") ECHAR UCHAR)) "'"))
 (terminal STRING_LITERAL_LONG_SINGLE_QUOTE "24"
  (seq "'''" (seq (opt (alt "'" "''")) (range "^'] | ECHAR | UCHAR ))* \"'''\""))))
 (terminal STRING_LITERAL_LONG_QUOTE "25"
  (seq "\"\"\"" (seq (opt (alt "\"" "\"\"")) (range "^\"] | ECHAR | UCHAR ))* '\"\"\"'"))))
 (terminal UCHAR "26"
  (alt (seq "\\u" HEX HEX HEX HEX) (seq "\\U" HEX HEX HEX HEX HEX HEX HEX HEX)))
 (rule _RDFLiteral_1 "128s.1" (alt _empty _RDFLiteral_2))
 (rule _RDFLiteral_3 "128s.3" (seq "^^" iri))
 (rule _RDFLiteral_2 "128s.2" (alt LANGTAG _RDFLiteral_3))
 (rule RDFLiteral "128s" (seq String _RDFLiteral_1))
 (rule BooleanLiteral "133s" (alt "true" "false"))
 (rule iri "135s" (alt IRIREF PrefixedName))
 (rule PrefixedName "136s" (alt PNAME_LN PNAME_NS))
 (rule BlankNode "137s" (alt BLANK_NODE_LABEL ANON))
 (terminal PNAME_NS "139s" (seq (opt PN_PREFIX) ":"))
 (terminal PNAME_LN "140s" (seq PNAME_NS PN_LOCAL))
 (terminal BLANK_NODE_LABEL "141s"
  (seq "_:" (alt PN_CHARS_U (range "0-9")) (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal VAR1 "143s" (seq "?" VARNAME))
 (terminal LANGTAG "144s"
  (seq "@" (plus (range "a-zA-Z")) (star (seq "-" (plus (range "a-zA-Z0-9"))))))
 (terminal EXPONENT "154s" (seq (range "eE") (opt (range "+-")) (plus (range "0-9"))))
 (terminal ECHAR "159s" (seq "\\" (range "tbnrf\"']")))
 (terminal WS "161s" (alt (hex "#x20") (hex "#x9") (hex "#xD") (hex "#xA")))
 (terminal ANON "162s" (seq "[" (star WS) "]"))
 (terminal PN_CHARS_BASE "163s"
  (alt
   (range "A-Z")
   (range "a-z")
   (range "#x00C0-#x00D6")
   (range "#x00D8-#x00F6")
   (range "#x00F8-#x02FF")
   (range "#x0370-#x037D")
   (range "#x037F-#x1FFF")
   (range "#x200C-#x200D")
   (range "#x2070-#x218F")
   (range "#x2C00-#x2FEF")
   (range "#x3001-#xD7FF")
   (range "#xF900-#xFDCF")
   (range "#xFDF0-#xFFFD")
   (range "#x10000-#xEFFFF")) )
 (terminal PN_CHARS_U "164s" (alt PN_CHARS_BASE "_"))
 (terminal VARNAME "166s"
  (seq
   (alt PN_CHARS_U (range "0-9"))
   (star
    (alt PN_CHARS_U
     (range "0-9")
     (hex "#x00B7")
     (range "#x0300-#x036F")
     (range "#x203F-#x2040")) )) )
 (terminal PN_CHARS "166s"
  (alt PN_CHARS_U "-"
   (range "0-9")
   (hex "#x00B7")
   (range "#x0300-#x036F")
   (range "#x203F-#x2040")) )
 (terminal PN_PREFIX "167s"
  (seq PN_CHARS_BASE (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal PN_LOCAL "168s"
  (seq
   (alt PN_CHARS_U ":" (range "0-9") PLX)
   (opt (seq (star (alt PN_CHARS "." ":" PLX)) (alt PN_CHARS ":" PLX)))) )
 (terminal PLX "169s" (alt PERCENT PN_LOCAL_ESC))
 (terminal PERCENT "170s" (seq "%" HEX HEX))
 (terminal HEX "171s" (alt (range "0-9") (range "A-F") (range "a-f")))
 (terminal PN_LOCAL_ESC "172s"
  (seq "\\"
   (alt "_" "~" "." "-" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" "/" "?" "#"
    "@" "%" )) ))
